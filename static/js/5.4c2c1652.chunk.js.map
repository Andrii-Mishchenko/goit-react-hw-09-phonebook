{"version":3,"sources":["../node_modules/@babel/runtime/helpers/esm/slicedToArray.js","../node_modules/@babel/runtime/helpers/esm/arrayWithHoles.js","../node_modules/@babel/runtime/helpers/esm/iterableToArrayLimit.js","../node_modules/@babel/runtime/helpers/esm/nonIterableRest.js","styles/AuthorizationsView.module.css","views/RegisterView.js"],"names":["_slicedToArray","arr","i","Array","isArray","Symbol","iterator","Object","_arr","_n","_d","_e","undefined","_s","_i","next","done","push","value","length","err","unsupportedIterableToArray","TypeError","module","exports","RegisterView","useState","name","setName","email","setEmail","password","setPassword","dispatch","useDispatch","className","styles","title","form","onSubmit","e","preventDefault","authOperations","register","autoComplete","form__label","form__input","type","onChange","target","button"],"mappings":"6LAIe,SAASA,EAAeC,EAAKC,GAC1C,OCLa,SAAyBD,GACtC,GAAIE,MAAMC,QAAQH,GAAM,OAAOA,EDIxB,CAAeA,IELT,SAA+BA,EAAKC,GACjD,GAAsB,qBAAXG,QAA4BA,OAAOC,YAAYC,OAAON,GAAjE,CACA,IAAIO,EAAO,GACPC,GAAK,EACLC,GAAK,EACLC,OAAKC,EAET,IACE,IAAK,IAAiCC,EAA7BC,EAAKb,EAAII,OAAOC,cAAmBG,GAAMI,EAAKC,EAAGC,QAAQC,QAChER,EAAKS,KAAKJ,EAAGK,QAEThB,GAAKM,EAAKW,SAAWjB,GAH8CO,GAAK,IAK9E,MAAOW,GACPV,GAAK,EACLC,EAAKS,EACL,QACA,IACOX,GAAsB,MAAhBK,EAAW,QAAWA,EAAW,SAC5C,QACA,GAAIJ,EAAI,MAAMC,GAIlB,OAAOH,GFnBuB,CAAqBP,EAAKC,IAAM,OAAAmB,EAAA,GAA2BpB,EAAKC,IGLjF,WACb,MAAM,IAAIoB,UAAU,6IHIgF,K,mBIJtGC,EAAOC,QAAU,CAAC,MAAQ,kCAAkC,KAAO,iCAAiC,YAAc,wCAAwC,YAAc,wCAAwC,OAAS,qC,gGCmF1MC,UA9EM,WACnB,MAAwBC,mBAAS,IAAjC,mBAAOC,EAAP,KAAaC,EAAb,KACA,EAA0BF,mBAAS,IAAnC,mBAAOG,EAAP,KAAcC,EAAd,KACA,EAAgCJ,mBAAS,IAAzC,mBAAOK,EAAP,KAAiBC,EAAjB,KAEMC,EAAWC,cAwBjB,OACQ,gCACF,oBAAIC,UAAWC,IAAOC,MAAtB,+BAEA,uBACEF,UAAWC,IAAOE,KAClBC,SAhBa,SAACC,GACpBA,EAAEC,iBAEFR,EAASS,IAAeC,SAAS,CAAEhB,OAAME,QAAOE,cAEhDD,EAAS,IACTF,EAAQ,IACRI,EAAY,KAUNY,aAAa,MAHf,UAME,wBAAOT,UAAWC,IAAOS,YAAzB,kBAEE,uBACEV,UAAWC,IAAOU,YAClBC,KAAK,OACLpB,KAAK,OACLT,MAAOS,EACPqB,SAvCa,SAACR,GACxBZ,EAAQY,EAAES,OAAO/B,aA0CX,wBAAOiB,UAAWC,IAAOS,YAAzB,mBAEE,uBACEV,UAAWC,IAAOU,YAClBC,KAAK,QACLpB,KAAK,QACLT,MAAOW,EACPmB,SA9Cc,SAACR,GACzBV,EAASU,EAAES,OAAO/B,aAiDZ,wBAAOiB,UAAWC,IAAOS,YAAzB,sBAEE,uBACEV,UAAWC,IAAOU,YAClBC,KAAK,WACLpB,KAAK,WACLT,MAAOa,EACPiB,SArDiB,SAACR,GAC5BR,EAAYQ,EAAES,OAAO/B,aAwDf,wBAAQiB,UAAWC,IAAOc,OAAQH,KAAK,SAAvC","file":"static/js/5.4c2c1652.chunk.js","sourcesContent":["import arrayWithHoles from \"@babel/runtime/helpers/esm/arrayWithHoles\";\nimport iterableToArrayLimit from \"@babel/runtime/helpers/esm/iterableToArrayLimit\";\nimport unsupportedIterableToArray from \"@babel/runtime/helpers/esm/unsupportedIterableToArray\";\nimport nonIterableRest from \"@babel/runtime/helpers/esm/nonIterableRest\";\nexport default function _slicedToArray(arr, i) {\n  return arrayWithHoles(arr) || iterableToArrayLimit(arr, i) || unsupportedIterableToArray(arr, i) || nonIterableRest();\n}","export default function _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}","export default function _iterableToArrayLimit(arr, i) {\n  if (typeof Symbol === \"undefined\" || !(Symbol.iterator in Object(arr))) return;\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n  var _e = undefined;\n\n  try {\n    for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}","export default function _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}","// extracted by mini-css-extract-plugin\nmodule.exports = {\"title\":\"AuthorizationsView_title__2Dtpy\",\"form\":\"AuthorizationsView_form__oMey1\",\"form__label\":\"AuthorizationsView_form__label__37fPm\",\"form__input\":\"AuthorizationsView_form__input__1AwrG\",\"button\":\"AuthorizationsView_button__1wK-D\"};","import React, { useState } from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport { authOperations } from '../redux/auth';\r\nimport styles from '../styles/AuthorizationsView.module.css'\r\n\r\n\r\nconst RegisterView = () => { \r\n  const [name, setName] = useState('');\r\n  const [email, setEmail] = useState('');\r\n  const [password, setPassword] = useState('');\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const handleNameChange = (e) => {\r\n    setName(e.target.value);\r\n  };\r\n\r\n  const handleEmailChange = (e) => {\r\n    setEmail(e.target.value);\r\n  };\r\n\r\n  const handlePasswordChange = (e) => {\r\n    setPassword(e.target.value);\r\n  };\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();   \r\n\r\n    dispatch(authOperations.register({ name, email, password }));\r\n\r\n    setEmail('');\r\n    setName('');\r\n    setPassword('');\r\n  };\r\n\r\n  return (\r\n          <div>\r\n        <h1 className={styles.title}>Registration Page</h1>\r\n\r\n        <form\r\n          className={styles.form}\r\n          onSubmit={handleSubmit}       \r\n          autoComplete=\"off\"\r\n          \r\n        >\r\n          <label className={styles.form__label}>\r\n            Name:\r\n            <input\r\n              className={styles.form__input}\r\n              type=\"text\"\r\n              name=\"name\"\r\n              value={name}\r\n              onChange={handleNameChange}\r\n            />\r\n          </label>\r\n\r\n          <label className={styles.form__label}>\r\n            Email:\r\n            <input\r\n              className={styles.form__input}\r\n              type=\"email\"\r\n              name=\"email\"\r\n              value={email}\r\n              onChange={handleEmailChange}\r\n            />\r\n          </label>\r\n\r\n          <label className={styles.form__label}>\r\n            Password:\r\n            <input\r\n              className={styles.form__input}\r\n              type=\"password\"\r\n              name=\"password\"\r\n              value={password}\r\n              onChange={handlePasswordChange}\r\n            />\r\n          </label>\r\n\r\n          <button className={styles.button} type=\"submit\">Register</button>\r\n        </form>\r\n      </div>\r\n   );\r\n}\r\n \r\nexport default RegisterView;\r\n\r\n// class RegisterView extends Component {\r\n//   state = {\r\n//     name: '',\r\n//     email: '',\r\n//     password: '',\r\n//   };\r\n\r\n//   handleChange = ({ target: { name, value } }) => {\r\n//     this.setState({ [name]: value });\r\n//   };\r\n\r\n//   handleSubmit = e => {\r\n//     e.preventDefault();\r\n\r\n//     this.props.onRegister(this.state);\r\n\r\n//     this.setState({ name: '', email: '', password: '' });\r\n//   };\r\n\r\n//   render() {\r\n//     const { name, email, password } = this.state;\r\n\r\n//     return (\r\n//       <div>\r\n//         <h1 className={styles.title}>Registration Page</h1>\r\n\r\n//         <form\r\n//           className={styles.form}\r\n//           onSubmit={this.handleSubmit}       \r\n//           autoComplete=\"off\"\r\n          \r\n//         >\r\n//           <label className={styles.form__label}>\r\n//             Name:\r\n//             <input\r\n//               className={styles.form__input}\r\n//               type=\"text\"\r\n//               name=\"name\"\r\n//               value={name}\r\n//               onChange={this.handleChange}\r\n//             />\r\n//           </label>\r\n\r\n//           <label className={styles.form__label}>\r\n//             Email:\r\n//             <input\r\n//               className={styles.form__input}\r\n//               type=\"email\"\r\n//               name=\"email\"\r\n//               value={email}\r\n//               onChange={this.handleChange}\r\n//             />\r\n//           </label>\r\n\r\n//           <label className={styles.form__label}>\r\n//             Password:\r\n//             <input\r\n//               className={styles.form__input}\r\n//               type=\"password\"\r\n//               name=\"password\"\r\n//               value={password}\r\n//               onChange={this.handleChange}\r\n//             />\r\n//           </label>\r\n\r\n//           <button className={styles.button} type=\"submit\">Register</button>\r\n//         </form>\r\n//       </div>\r\n//     );\r\n//   }\r\n// }\r\n\r\n// const mapDispatchToProps = {\r\n//   onRegister: authOperations.register,\r\n// };\r\n\r\n// // const mapDispatchToProps = dispatch =>({\r\n// //   onRegister: (data) => dispatch(authOperations.register(data))\r\n// // }) \r\n\r\n// export default connect(null, mapDispatchToProps)(RegisterView)"],"sourceRoot":""}